---

- name: GET Nagios
  get_url:
    url: "{{ nagiosurl }}"
    dest: "{{ download_dir }}/{{ nagiossrc }}.tar.gz"

- name: Unpack Nagios source files
  unarchive:
    src: "{{ download_dir }}/{{ nagiossrc }}.tar.gz"
    dest: "{{ download_dir }}"
    remote_src: yes

- name: Set upgrade as not required by default
  set_fact:
    nagios_upgrade_required: false

# https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/4/en/upgrading.html
- name: check if nagios main.php exists
  stat:
    path: /usr/local/nagios/share/main.php
  register: nagios_mainphp_file

- block:

  - name: read nagios installed version
    shell: head /usr/local/nagios/share/main.php | grep "this_version" | cut -d"=" -f 2 | tr --delete ";" | tr --delete "'" | xargs echo -n
    changed_when: false
    register: cmd_nagios_version
    tags:
      - skip_ansible_lint
    check_mode: no

  - name: Check if upgrade is required
    set_fact:
      nagios_upgrade_required: true
    when: cmd_nagios_version.stdout != nagios_version
  
  when: nagios_mainphp_file.stat.exists

- name: backup files before clean
  copy: 
    src: "{{ item }}"
    dest: "{{ item }}.bkp"
    force: yes
  with_items:
    - "/usr/local/nagios/share/main.php"
    - "/usr/local/nagios/share/index.php"
    - "/usr/local/nagios/share/side.php"
    - "{{ nagios_httpd_conf_location }}/nagios.conf"
    - "/usr/local/nagios/bin/nagios"
    - "/usr/local/nagios/include/nagios/nagios.h"
    - "/etc/init.d/nagios"
  when: nagios_upgrade_required
  failed_when: false

- name: Clean files before upgrade
  file: 
    path: "{{ item }}"
    state: absent
  with_items:
    - "/usr/local/nagios/share/main.php"
    - "/usr/local/nagios/share/index.php"
    - "/usr/local/nagios/share/side.php"
    - "{{ nagios_httpd_conf_location }}/nagios.conf"
    - "/usr/local/nagios/bin/nagios"
    - "/usr/local/nagios/var/rw"
    - "/usr/local/nagios/include/nagios/nagios.h"
    - "/etc/init.d/nagios"
  when: nagios_upgrade_required
  notify: restart nagios

- name: Configure Nagios
  command: ./configure --with-command-group={{ monitoring_command_group }} --with-httpd_conf={{ nagios_httpd_conf_location }} --with-nagios-user={{ monitoring_user }}
  args:
    chdir: "{{ download_dir }}/{{ nagiossrc }}"
    creates: "{{ download_dir }}/{{ nagiossrc }}/Makefile"

- name: Make all
  command: make all
  args:
    chdir: "{{ download_dir }}/{{ nagiossrc }}"
    creates: "{{ download_dir }}/{{ nagiossrc }}/base/nagios"

- name: Make install
  command: make install
  args:
    chdir: "{{ download_dir }}/{{ nagiossrc }}"
    creates: /usr/local/nagios/bin/nagios

- name: Make install-config
  command: make install-config
  args:
    chdir: "{{ download_dir }}/{{ nagiossrc }}"
    creates: /usr/local/nagios/etc/nagios.cfg

- name: Make install-init
  command: make install-init
  args:
    chdir: "{{ download_dir }}/{{ nagiossrc }}"
    creates: "{{ nagios_init }}"
  notify: restart nagios

- name: Make install-commandmode
  command: make install-commandmode
  args:
    chdir: "{{ download_dir }}/{{ nagiossrc }}"
    creates: /usr/local/nagios/var/rw
  notify: restart nagios

- name: Make install-config
  command: make install-config
  args:
    chdir: "{{ download_dir }}/{{ nagiossrc }}"
    creates: /usr/local/nagios/etc/nagios.cfg

- name: Make install-webconf
  command: make install-webconf
  args:
    chdir: "{{ download_dir }}/{{ nagiossrc }}"
    creates: "{{ nagios_httpd_conf_location }}/nagios.conf"
  notify: restart apache

- name: Set htpasswd for gui users
  htpasswd:
    path: /usr/local/nagios/etc/htpasswd.users
    name: "{{ item.user }}"
    password: "{{ item.pass }}"
    state: present
  with_items: "{{ nagios_users }}"

- name: Reload Systemd
  systemd:
    name: nrpe
    daemon_reload: yes
  when: (ansible_distribution == "CentOS" and ansible_distribution_major_version == "7") or
        (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 15) or
        (ansible_distribution == "Debian" and ansible_distribution_major_version|int >= 8)

- name: Reload SysVinit
  command: update-rc.d nagios defaults
  changed_when: False
  when: ansible_distribution == "Debian" and ansible_distribution_major_version|int < 8

- name: Reload Upstart
  command: initctl reload-configuration
  changed_when: False
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int < 15

- name: Ensure Nagios is enabled on boot
  service:
    name: nagios
    enabled: yes
